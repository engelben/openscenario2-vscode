{
   "name":"OpenSCENARIO",
   "scopeName":"source.osc",
   "patterns":[
      {
         "include":"#statement"
      }
   ],
   "repository":{
      "statement":{
         "patterns":[
            {
               "include":"#comment"
            },
            {
               "include":"#keyword"
            },
            {
               "include":"#literal"
            }
         ]
      },
      "keyword":{
         "patterns":[
            {
               "name":"keyword.control.flow.osc",
               "match":"\\b(with|do|on)\\b"
            },
            {
               "name":"keyword.control.import.osc",
               "match":"\\b(import)\\b"
            },
            {
               "name":"support.function.builtin.osc",
               "match":"(?<!\\.)\\b(keep|until|cover)\\b"
            },
            {
               "name":"keyword.other.osc",
               "match":"\\b(extend|inherits|on|as|is|if|emit|only|call|external|default)\\b"
            },
            {
               "include":"#declaration"
            },
            {
               "include":"#primitive-type"
            },
            {
               "include":"#composition-operator"
            }
         ]
      },
      "declaration":{
         "patterns":[
            {
               "include":"#class-name"
            },
            {
               "name":"storage.type.function.osc",
               "match":"\\b(def)\\b"
            },
            {
               "include":"#field-declaration"
            }
         ]
      },
      "field-declaration":{
         "patterns":[
            {
               "name":"meta.class.osc",
               "begin":"\\b(?<=: )(?=\\w*)",
               "end":" ",
               "patterns":[
                  {
                     "include":"#class-name"
                  },
                  {
                     "name": "entity.name.type.class.osc",
                     "match":"\\b(?<=: )(\\w*)"
                  }
               ]
            }
         ]
      },
      "class-name":{
         "patterns":[
            {
               "name":"entity.name.type.class.osc",
               "match":"\\b(type|unit|actor|enum|struct|action|scenario|modifier|var|event)\\b"
            },
            {
               "include":"#primitive-type"
            }
         ]
      },
      "primitive-type":{
         "patterns":[
            {
               "name":"support.type.osc",
               "match":"(?<!\\.)\\b(int|uint|float|string|bool)\\b"
            }
         ]
      },
      "composition-operator":{
         "patterns":[
            {
               "name":"keyword.control.flow.temporal.osc",
               "match":"\\b(serial|parallel|one_of)\\b"
            }
         ]
      },
      "comment":{
         "patterns":[
            {
               "name":"comment.block.osc",
               "begin":"(\"{3,})$",
               "end":"\"{3,}$"
            },
            {
               "name":"comment.inline.osc",
               "match":"(#+).*$"
            }
         ]
      },
      "string":{
         "patterns":[
            {
               "name":"string.quoted.double.osc",
               "begin":"\"",
               "end":"\""
            },
            {
               "name":"string.quoted.single.osc",
               "begin":"'",
               "end":"'"
            }
         ]
      },
      "bool":{
         "patterns":[
            {
               "name":"constant.language.osc",
               "match":"\b(true|false)\b"
            }
         ]
      },
      "literal":{
         "patterns":[
            {
               "include":"#number"
            },
            {
               "include":"#bool"
            },
            {
               "include":"#string"
            }
         ]
      },
      "number":{
         "name":"constant.numeric.osc",
         "patterns":[
            {
               "include":"#number-int"
            },
            {
               "include":"#number-float"
            }
         ]
      },
      "number-float":{
         "match":"\\b([0-9]+[\\.][0-9]+)([\\w]+)?\\b",
         "captures":{
            "1":{
               "name":"constant.numeric.float.osc"
            },
            "2":{
               "name":"constant.other.physicaltype.osc"
            }
         }
      },
      "number-int":{
         "patterns":[
            {
               "match":"\\b(?<!\\.)([1-9]{1,}[0-9]+)(?!\\.)(\\w+)?\\b",
               "captures":{
                  "1":{
                     "name":"constant.numeric.integer.osc"
                  },
                  "2":{
                     "name":"constant.other.physicaltype.osc"
                  }
               }
            },
            {
               "match":"\\b(?<!\\.)([0-9])(?!\\.)([a-zA-Z]+)?\\b",
               "captures":{
                  "1":{
                     "name":"constant.numeric.integer.osc"
                  },
                  "2":{
                     "name":"constant.other.physicaltype.osc"
                  }
               }
            }
         ]
      }
   }
}